<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"
    />

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>

    <link rel="icon" href="http://static.localhost/assets/favicon.svg" />
    <title>API View</title>
  </head>

  <body
    class="d-flex flex-column justify-content-between gap-2"
    style="min-height: 100vh"
  >
    <div class="container">
      <%- include('./partials/header.ejs') %>

      <main class="shadow p-3 my-5 bg-body-tertiary rounded"><%- body %></main>
    </div>
    <%- include('./partials/footer.ejs') %>
  </body>
  <script>
    function sendCreate(event) {
      event.preventDefault();
      const form = event.target;

      const formData = new FormData(form);
      const parsedData = Object.fromEntries(formData.entries());

      const options = {
        method: "POST",
        body: JSON.stringify(parsedData),
        headers: { "Content-Type": "application/json" },
      };

      fetch(form.action, options)
        .then((response) => response.json())
        .then((data) => console.log(data));
      location.reload();
    }

    function sendDelete(name, id) {
      const message = `Are you sure you want to delete ID: ${id}`;
      if (window.confirm([message])) {
        const url = `/api/${name}/${id}`;
        fetch(url, { method: "DELETE" })
          .then((response) => response.status)
          .then((status) => console.log(status));
        location.reload();
      }
    }

    function getDetails(name, id) {
      const url = `api/${name}/${id}`;
      const form = document.querySelector(`#${name}Modal`);
      const data = fetch(url)
        .then((response) => response.json())
        .then((data) => {
          delete data["_id"];
          for (const name of Object.keys(data)) {
            const input = form.querySelector(`[name='${name}']`);
            const value = data[name];
            input.value = value;
            console.log(value);
          }
        });
      form.querySelector(`[name='id']`).value = id;
    }

    function sendUpdate(event) {
      event.preventDefault();
      const form = event.target;

      const formData = new FormData(form);
      const parsedData = Object.fromEntries(formData.entries());
      const API = `${form.action}/${parsedData.id}`;

      const options = {
        method: "PUT",
        body: JSON.stringify(parsedData),
        headers: { "Content-Type": "application/json" },
      };
      fetch(API, options)
        .then((response) => response.json())
        .then((data) => console.log(data));
      location.reload();
    }
  </script>
  <script>
    const tabs = document.querySelectorAll('button[data-bs-toggle="tab"]');
    const activeTab = localStorage.getItem("activeTab");
    const currentTab = document.querySelector(`button#${activeTab}`);
    const defaultTab = document.querySelector(
      "#EndpointTabs li:first-child button"
    );

    for (const tab of tabs) {
      tab.addEventListener("show.bs.tab", (e) =>
        localStorage.setItem("activeTab", e.target.id)
      );
    }

    activeTab
      ? bootstrap.Tab.getOrCreateInstance(currentTab).show()
      : bootstrap.Tab.getOrCreateInstance(defaultTab).show();
  </script>
</html>
